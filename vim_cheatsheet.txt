SPC-r "source .vimrc"
 
-------------------- MOVING --------------------
C-w-H "move all horizontal windows to verical windows"
C-w-K "move all vertical windows to horizontal windows"
 
SPC-h "move current window to left"
SPC-l "move the current window to right"
SPC-j "move the current window down"
SPC-k "move the current window up"
 
SPC-H "swap current window with the left one"
SPC-L "swap current window with the right one"
SPC-J "swap current window with the below one"
SPC-K "swap current window with the upper one"
 
j "from command mode to move cursor to new below line w/o swith to insert mode"
------------------- END MOVING -------------------
 
------------- WINDOW CLOSING ---------------
:only "close all other windows, only keep the current window"
:qa "quick all window"
:q "quick current window"
------------- WINDOW CLOSING ---------------
 
------------ FULL SCREEN --------------
C-w-_ "fullscreen window (height)"
C-w-| "fullscreen window (width)"
C-w-= "back to original status before do fullscreen"
--------- END FULL SCREEN -------------
 
--------------- RESIZE -----------------
:resize +/-<size> "resize by height"
:vertical resize +/- "resize by width"
------------- END RESIZE CONFIGURATION ---------------
 
--------------- BUFFER -----------------
SPC-bn "next buffer"
SPC-bs "list buffer and enter number of buffer to active"
SPC-bd "list buffer then delete the selected one"

:bd "buffer delete - close current buffer"
:bd <n> "buffer delete - close buffer n-th"
:bd! <n> "buffer delete - close buffer n-th w/o saving"
:ls "list buffer"
:buffers "list buffer"

:vsplit | b <n> "open buffer n-th with new vertical window"
:split | b <n> "open buffer n-th with new horizontal window"
------------- END BUFFER ---------------
 
------------------ TAB -------------------
SPC-tn "go to next tab"
SPC-to "tabnew"
SPC-t1 "go to tab number 1"
SPC-t2 "go to tab number 2"
SPC-t3 "go to tab number 3"
SPC-t4 "go to tab number 4"
SPC-t5 "go to tab number 5"
SPC-t6 "go to tab number 6"
SPC-t7 "go to tab number 7"
SPC-t8 "go to tab number 8"
SPC-t9 "go to tab number 9"

:tabnew "open window/buffer/file/directory into new tab, Tab is the group of windows/files"
:tabn <n> "go to tab n-th"
:tabnext "go to next tab"
:tabprev "go to previous tab"
:tabonly "close all other tabs"
:tabclose "close current tab"
--------------- END TAB ACTION -------------------
 
---------------- NERDTREE -----------------
:Dt <dir> "open directory (NERDTree) with new tab. This is user-defined command, must be capital letter"

SPC-df "nerdtreefind"
SPC-dt "nerdtreetoggle"
SPC-do "nerdtree"

m "open nerdtree menu"
o "collapse/uncollapse a specific sub directory"
O "collapse all directories"
X "uncollapse all directories"

i "open file in horizontal"
s "open file in vertical"
--------------- END NERDTREE ACTION --------------
 
--------------- TERMINAL -----------------------
Ctrl-c "exit editor from terminal to back to NORMAL mode. Equivalent to ESC of normal editor. Make sure you're in TERMINAL mode, not NORMAL mode"
-------------- END TERMINAL --------------------

------------- GIT (USING GITSIGNS and TELESCOPE) ----------------
SPC-gc "show git commit of repo" (Using telescope)
SPC-gh "show git history of current buffer or current file" (Using telescope)
SPC-gb "show git blame of specific line/statement of current file" (Using gitsigns)
SPC-gd "git diff" (Using git signs)
----------- END GIT ------------------

------------------ SEARCH -------------------
SPC-sf "search file in current directory" (Use FZF)
SPC-ss "search string in current file" (Use FZF)
SPC-sa "search string in current directory" (Use Telescope)
---------------- END SEARCH -----------------
 
--------------- LSP -----------------
<SPC>-i "auto import"

gd "go to definition"
gr "go to reference"
K "hover, check function information"

<SPC>-rn "rename"

C-o "go backward"
C-i "go forward"
------------- END LSP ---------------
 
---------------- TELESCOPE ----------
<C>-v "open file in vsplit (vertical window)"
<C>-x "open file in split (horizontal)"
<C>-t "open file in new tab"
--------------- END TELESCOPE -------

--------------- BOOLEAN REVERT --------------------
Using ! to revert any boolean value
:set nu! "to revert previous :set nu"
:set rnu! "to revert previous :set rnu"
------------- END BOOLEAN REVERT ------------------

------------ BASH ---------------
:! "Use to trigger a execution command mode"
:!bash <script_name> "run script even that script is not in execution mode"
:! <script_name> "run script if it's in execution mode"
:w !bash "run current buffer as script"
---------- END BASH -------------

--------------------- COPY -------------------
:% "means whole file content. It calls range mode (whole file)"
:%y "copy whole file content"
:1,10y "copy line 1 -> 10"
yy "copy current line"
yiw "copy current word"
y "copy current character"
y<n>w "copy <n> word from cursor. Example y6w - copy 6 words"
y<n>l "copy <n> characters from cursor. Example y6l - copy 6 characters"
y$ "copy from cursor to end of line include current character"
y0 "copy from cursor (not include current character) to begining of line"
yi{ "copy words inner {"
yi[ "copy words inner ["
------------------- END COPY -----------------

--------------------- COPY CLIPBOARD -------------------
"+ "mean register of clipboard"
:%y+ "means whole file content (no need " because it's using range mode, not normal mode. NORMAL mode needs "+ to specify as register (clipboard))"
:1,10y+ "copy from line 1 -> 10"
"+yy "copy current line"
"+yiw "copy current word"
"+y "copy current character"
"+y<n>w "copy <n> word from cursor. Example y6w - copy 6 words"
"+y<n>l "copy <n> characters from cursor. Example y6l - copy 6 characters"
"+y$ "copy from cursor to end of line include current character"
"+y0 "copy from cursor (not include current character) to begining of line"
"+yi{ "copy words inner {"
"+yi[ "copy words inner ["
------------------- END COPY CLIPBOARD -----------------

-------------------- PASTE ----------------------------
p "to paste after cursor (line after cursor, not same line with cursor)"
P "to paste before cursor (line before cursor, not same line with cursor)"
SPC-p "to paste at the cursor"
----------------- END PASTE --------------------------

-------------------- PASTE CLIPBOARD ----------------------------
SPC-p "to paste at the cursor. Same as normal paste"
----------------- END PASTE CLIPBOARD --------------------------

----------------- DELETE ----------------------
:%d "delete whole file content"
dd "delete current line"
d$ "delete current cursor to end of line (include cursor)"
d0 "delete current cursor to begining of line (exclude cursor)"
d<n>w "delete <n> words include current word"
di{ "delete wors inner {"
di[ |delete words inner ["
d<n>l "delete <n> characters from cursor. Example d6l - delete 6 characters"
-------------- END DELETE ---------------------

--------------- OPEN BROWSER -------------------
gx "leave the cursor on the link and type gx"
------------- END OPEN BROWSER -----------------